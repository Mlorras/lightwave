/*
 * Copyright ©2018 VMware, Inc.  All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the “License”); you may not
 * use this file except in compliance with the License.  You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an “AS IS” BASIS, without
 * warranties or conditions of any kind, EITHER EXPRESS OR IMPLIED.  See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

syntax = "proto3";

package postwatch;

service PostWatch {
  rpc RpcWatchRequest(stream WatchRequest) returns (stream WatchResponse) {}
}

message WatchRequest {
    oneof request_union {
        WatchCreateRequest create_request   = 1;
        WatchCancelRequest cancel_request   = 2;
        WatchPingRequest   progress_request = 3;
    }
}

message WatchCreateRequest {
    string subtree       = 1;
    string filter        = 2;
    bool prev_value      = 3;
    int64 start_revision = 4;
}

message WatchCancelRequest{
    int64 watch_id = 1;
}

message WatchPingRequest {
}

message WatchResponse {
    int64 watch_id         = 1;
    bool created           = 2;
    bool canceled          = 3;
    int64 compact_revision = 4;
    repeated Event events  = 5;
}

message Event {
    enum EventType {
        ADD    = 0;
        MODIFY = 1;
        DELETE = 2;
    }
    int64 revision        = 1;
    EventType event_type  = 2;
    Object CurrentObject  = 3;
    Object PreviousObject = 4;
}

message Object {
    int64 Version                    = 1;
    string Dn                        = 2;
    repeated Attribute AttributeList = 3;
}

message Attribute {
    string Name           = 1;
    repeated string Value = 2;
}
